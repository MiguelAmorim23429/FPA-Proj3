{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport RegisterScreen from \"./screens/RegisterScreen\";\nimport CompetitionScreen from \"./screens/CompetitionScreen\";\nimport AthleticsTestScreen from \"./screens/AthleticsTestScreen\";\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Screen } from \"react-native-web/dist/index\";\nimport LoadingScreen from \"./screens/LoadingScreen\";\nexport default function App() {\n  var auth = getAuth();\n\n  var _useState = useState(auth.currentUser),\n      _useState2 = _slicedToArray(_useState, 2),\n      loggedIn = _useState2[0],\n      setLoggedIn = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  useEffect(function () {\n    var authChange = onAuthStateChanged(auth, function (user) {\n      setLoggedIn(user);\n      setLoading(false);\n    });\n    return function () {\n      authChange();\n    };\n  }, []);\n  var Stack = createNativeStackNavigator();\n\n  if (loading) {\n    return React.createElement(LoadingScreen, null);\n  }\n\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, !loggedIn ? React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Register\",\n    component: RegisterScreen,\n    options: {\n      headerShown: false\n    }\n  })) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Competition\",\n    component: CompetitionScreen,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"AthleticsTest\",\n    component: AthleticsTestScreen,\n    options: {\n      headerShown: false\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageTeste: {\n    width: 176,\n    height: 120,\n    marginTop: 120\n  }\n});","map":{"version":3,"sources":["C:/Users/Pedro/Documents/GitHub/FPA-Proj3/fpaApp/App.js"],"names":["React","useEffect","useState","NavigationContainer","createNativeStackNavigator","HomeScreen","LoginScreen","RegisterScreen","CompetitionScreen","AthleticsTestScreen","getAuth","onAuthStateChanged","Screen","LoadingScreen","App","auth","currentUser","loggedIn","setLoggedIn","loading","setLoading","authChange","user","Stack","headerShown","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","imageTeste","width","height","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;;AAEA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,cAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,mBAAP;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA2C,eAA3C;;;;SACyCC,M;AACzC,OAAOC,aAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAW5B,MAAMC,IAAI,GAAGL,OAAO,EAApB;;AACA,kBAAgCR,QAAQ,CAACa,IAAI,CAACC,WAAN,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AACA,mBAA8BhB,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOiB,OAAP;AAAA,MAAgBC,UAAhB;;AAEAnB,EAAAA,SAAS,CAAC,YAAM;AAEd,QAAMoB,UAAU,GAAGV,kBAAkB,CAACI,IAAD,EAAO,UAACO,IAAD,EAAU;AACpDJ,MAAAA,WAAW,CAACI,IAAD,CAAX;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAHoC,CAArC;AAIA,WAAO,YAAM;AACXC,MAAAA,UAAU;AACX,KAFD;AAGD,GATQ,EASN,EATM,CAAT;AAWA,MAAME,KAAK,GAAGnB,0BAA0B,EAAxC;;AAEA,MAAGe,OAAH,EAAY;AACV,WAAQ,oBAAC,aAAD,OAAR;AACD;;AAED,SACE,oBAAC,mBAAD,QACE,oBAAC,KAAD,CAAO,SAAP,QACG,CAACF,QAAD,GACC,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,OAAnB;AAA2B,IAAA,SAAS,EAAEX,WAAtC;AAAmD,IAAA,OAAO,EAAE;AAAEkB,MAAAA,WAAW,EAAE;AAAf;AAA5D,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,UAAnB;AAA8B,IAAA,SAAS,EAAEjB,cAAzC;AAAyD,IAAA,OAAO,EAAE;AAAEiB,MAAAA,WAAW,EAAE;AAAf;AAAlE,IAFF,CADD,GAMC,0CACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEnB,UAArC;AAAiD,IAAA,OAAO,EAAE;AAACmB,MAAAA,WAAW,EAAE;AAAd;AAA1D,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,aAAnB;AAAiC,IAAA,SAAS,EAAEhB,iBAA5C;AAA+D,IAAA,OAAO,EAAE;AAACgB,MAAAA,WAAW,EAAE;AAAd;AAAxE,IAFF,EAGE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,eAAnB;AAAmC,IAAA,SAAS,EAAEf,mBAA9C;AAAmE,IAAA,OAAO,EAAE;AAACe,MAAAA,WAAW,EAAE;AAAd;AAA5E,IAHF,CAPJ,CADF,CADF;AAmBD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAE,GADG;AAEVC,IAAAA,MAAM,EAAE,GAFE;AAGVC,IAAAA,SAAS,EAAE;AAHD;AAPmB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { StyleSheet } from 'react-native';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport CompetitionScreen from './screens/CompetitionScreen';\r\nimport AthleticsTestScreen from './screens/AthleticsTestScreen';\r\nimport { getAuth, onAuthStateChanged} from 'firebase/auth'\r\nimport { View, ActivityIndicator, Image, Screen } from 'react-native'\r\nimport LoadingScreen from './screens/LoadingScreen';\r\n\r\nexport default function App() {\r\n\r\n  // useEffect(() => {\r\n  //   /**\r\n  //    * Espera dois segundos para meter o estado de loading como falso. \r\n  //    * Como O firebase vai buscar a info mais rápido do que 2 segundos,\r\n  //    * a LoadingScreen amostra na mesma e ao mesmo tempo conseguimos desativá-la mais tarde.\r\n  //    * */  \r\n  //   setTimeout(() => setLoading(false), 2000)\r\n  // }, [])\r\n\r\n  const auth = getAuth()\r\n  const [loggedIn, setLoggedIn] = useState(auth.currentUser)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    \r\n    const authChange = onAuthStateChanged(auth, (user) => {\r\n      setLoggedIn(user)\r\n      setLoading(false)\r\n    });\r\n    return () => {\r\n      authChange()\r\n    }\r\n  }, [])\r\n\r\n  const Stack = createNativeStackNavigator();\r\n\r\n  if(loading) {\r\n    return (<LoadingScreen />)\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        {!loggedIn ? (\r\n          <>\r\n            <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\r\n            <Stack.Screen name=\"Register\" component={RegisterScreen} options={{ headerShown: false }} />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Stack.Screen name=\"Home\" component={HomeScreen} options={{headerShown: false}} />\r\n            <Stack.Screen name=\"Competition\" component={CompetitionScreen} options={{headerShown: false}} />\r\n            <Stack.Screen name=\"AthleticsTest\" component={AthleticsTestScreen} options={{headerShown: false}} />\r\n          </>\r\n        )}\r\n        \r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  imageTeste: {\r\n    width: 176,\r\n    height: 120,\r\n    marginTop: 120,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}