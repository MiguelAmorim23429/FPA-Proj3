{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MaskInput, { createNumberMask } from 'react-native-mask-input';\nimport { Header, ListItem } from 'react-native-elements';\nimport { getDatabase, ref, onValue, get, update } from \"firebase/database\";\nimport { getAuth } from 'firebase/auth';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport useSportModalities from \"./useSportModalities\";\n\nvar AthleticsTestScreen = function AthleticsTestScreen(_ref) {\n  var route = _ref.route;\n  var idMatch = route.params.idProva;\n  var navigation = useNavigation();\n  var db = getDatabase();\n  var auth = getAuth();\n  var participantsRef = ref(db, '/provas/' + idMatch + '/participantes/');\n  var athletesRef = ref(db, '/atletas');\n  var matchRef = ref(db, \"/provas/\" + idMatch);\n  var userRef = ref(db, \"/users/\" + auth.currentUser.uid);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      results = _useState2[0],\n      setResults = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      match = _useState4[0],\n      setMatch = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      inscritos = _useState8[0],\n      setAtletas = _useState8[1];\n\n  var _useSportModalities = useSportModalities({\n    sportModalityId: match == null ? void 0 : match.modalidade\n  }),\n      _useSportModalities2 = _slicedToArray(_useSportModalities, 1),\n      sportModality = _useSportModalities2[0];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      inputChanged = _useState10[0],\n      setInputChanged = _useState10[1];\n\n  useEffect(function () {\n    var handlerMatch = function handlerMatch(snapshot) {\n      var matchObj = snapshot.val();\n      setMatch(matchObj);\n    };\n\n    var closeFetchMatch = onValue(matchRef, handlerMatch);\n    get(userRef).then(function (snapshot) {\n      setUser(snapshot.val());\n    });\n    return function () {\n      closeFetchMatch();\n    };\n  }, []);\n\n  var sortFunction = function sortFunction(_ref2, _ref3) {\n    var _ref4 = _slicedToArray(_ref2, 2),\n        a = _ref4[1];\n\n    var _ref5 = _slicedToArray(_ref3, 2),\n        b = _ref5[1];\n\n    if ((sportModality == null ? void 0 : sportModality.unidade) === \"segundos\") {\n      if (a.resultado === \"\" || a.resultado === null) return 1;\n      if (b.resultado === \"\" || b.resultado === null) return -1;\n      if (a.resultado === b.resultado) return 0;\n      return a.resultado < b.resultado ? -1 : 1;\n    } else if ((sportModality == null ? void 0 : sportModality.unidade) === \"metros\") {\n      if (a.resultado === \"\" || a.resultado === null) return 1;\n      if (b.resultado === \"\" || b.resultado === null) return -1;\n      if (a.resultado === b.resultado) return 0;\n      return a.resultado > b.resultado ? -1 : 1;\n    }\n  };\n\n  useEffect(function () {\n    var handler = function handler(snapshot) {\n      var atletasSnapshot, atletas, inscritos, newResultados, enrolledResultsArray, enrolledResults;\n      return _regeneratorRuntime.async(function handler$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(get(athletesRef));\n\n            case 2:\n              atletasSnapshot = _context.sent;\n              atletas = {};\n              atletasSnapshot.forEach(function (childSnapshot) {\n                var childKey = childSnapshot.key;\n                var childData = childSnapshot.val();\n\n                if (childData.genero === match.genero) {\n                  atletas[childKey] = childData;\n                }\n              });\n              inscritos = {};\n              newResultados = {};\n              enrolledResultsArray = [];\n              enrolledResults = {};\n              snapshot.forEach(function (childSnapshot) {\n                var idParticipant = childSnapshot.key;\n                var idAthlete = childSnapshot.val().atleta;\n                var result = childSnapshot.val().resultado;\n                newResultados[idParticipant] = result || '';\n                inscritos[idParticipant] = atletas[idAthlete];\n                atletas[idAthlete].resultado = result || '';\n                enrolledResults[idParticipant] = atletas[idAthlete];\n                enrolledResultsArray = Object.entries(enrolledResults);\n\n                for (var i = 0; i < enrolledResultsArray.length; i++) {\n                  enrolledResultsArray.sort(sortFunction);\n                }\n              });\n              setResults(newResultados);\n              setAtletas(enrolledResultsArray);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    var closeParticipantsOnvalue = match && onValue(participantsRef, handler);\n    return function () {\n      match && closeParticipantsOnvalue();\n    };\n  }, [match, sportModality]);\n\n  var goToPreviousScreen = function goToPreviousScreen() {\n    if (inputChanged) {\n      Alert.alert(\"Tens a certeza?\", \"Vais perder as alterações que fizeste.\", [{\n        text: 'Sim',\n        onPress: function onPress() {\n          navigation.goBack();\n        }\n      }, {\n        text: 'Não'\n      }]);\n    } else {\n      navigation.goBack();\n    }\n  };\n\n  var addResult = function addResult(enrolledResults) {\n    var updates = {};\n    var resultsArray = [];\n    var enrolledResultsArray = Object.entries(enrolledResults);\n    enrolledResultsArray.forEach(function (enrolledResult) {\n      var idParticipant = enrolledResult[1][0];\n      var result = enrolledResult[1][1].resultado;\n      updates[\"/provas/\" + idMatch + \"/participantes/\" + idParticipant + \"/resultado/\"] = result;\n      resultsArray.push(result);\n    });\n\n    if (resultsArray.every(function (result) {\n      return result !== null && result !== undefined && result !== \"\";\n    })) {\n      updates[\"/provas/\" + idMatch + \"/estado/\"] = \"finalizada\";\n    }\n\n    update(ref(db), updates);\n    setInputChanged(false);\n    Alert.alert('Resultados adicionados com sucesso.');\n  };\n\n  var setResultOnIndex = function setResultOnIndex(valResultado, index) {\n    setInputChanged(true);\n\n    var newResult = _extends({}, inscritos);\n\n    newResult[index][1].resultado = valResultado;\n    setAtletas(newResult);\n  };\n\n  var maskInputCreator = function maskInputCreator(key) {\n    var sportModalityMaskInput;\n\n    if (match.estado === \"ativa\") {\n      if (sportModality.unidade === \"segundos\") {\n        sportModalityMaskInput = React.createElement(MaskInput, {\n          style: styles.textInput,\n          value: inscritos[key][1].resultado || '',\n          editable: user.autorizado ? true : false,\n          selectTextOnFocus: user.autorizado ? true : false,\n          onChangeText: function onChangeText(text) {\n            return setResultOnIndex(text, key);\n          },\n          mask: [/\\d/, /\\d/, ':', /\\d/, /\\d/, 's'],\n          placeholder: \"00:00s\"\n        });\n      } else if (sportModality.unidade === 'metros') {\n        sportModalityMaskInput = React.createElement(MaskInput, {\n          style: styles.textInput,\n          value: inscritos[key][1].resultado || '',\n          editable: user.autorizado ? true : false,\n          selectTextOnFocus: user.autorizado ? true : false,\n          onChangeText: function onChangeText(text) {\n            return setResultOnIndex(text, key);\n          },\n          mask: [/\\d/, /\\d/, '.', /\\d/, /\\d/, 'm'],\n          placeholder: \"00.00m\"\n        });\n      }\n    } else if (match.estado === \"finalizada\") {\n      if (sportModality.unidade === \"segundos\") {\n        sportModalityMaskInput = React.createElement(MaskInput, {\n          style: styles.textInput,\n          value: inscritos[key][1].resultado || '',\n          editable: false,\n          selectTextOnFocus: false,\n          placeholder: \"00:00s\"\n        });\n      } else if (sportModality.unidade === 'metros') {\n        sportModalityMaskInput = React.createElement(MaskInput, {\n          style: styles.textInput,\n          value: inscritos[key][1].resultado || '',\n          editable: false,\n          selectTextOnFocus: false,\n          placeholder: \"00.00m\"\n        });\n      }\n    } else if (match.estado === \"emInscricoes\") {\n      if (sportModality.unidade === \"segundos\") {\n        sportModalityMaskInput = React.createElement(TextInput, {\n          style: styles.textInput,\n          editable: false,\n          selectTextOnFocus: false,\n          placeholder: \"00:00s\"\n        });\n      } else if (sportModality.unidade === 'metros') {\n        sportModalityMaskInput = React.createElement(TextInput, {\n          style: styles.textInput,\n          editable: false,\n          selectTextOnFocus: false,\n          placeholder: \"00.00m\"\n        });\n      }\n    }\n\n    return sportModalityMaskInput;\n  };\n\n  return Object.entries(inscritos).length == 0 ? React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Header, {\n    statusBarProps: {\n      backgroundColor: 'transparent',\n      translucent: true\n    },\n    containerStyle: {\n      height: 80,\n      borderWidth: 0,\n      elevation: 4,\n      shadowColor: \"#000\"\n    },\n    backgroundColor: \"#1375BC\",\n    ViewComponent: LinearGradient,\n    linearGradientProps: {\n      colors: ['#1375BC', '#1794e8'],\n      start: {\n        x: 0.1,\n        y: 0.5\n      },\n      end: {\n        x: 1,\n        y: 0.5\n      }\n    },\n    leftComponent: React.createElement(View, {\n      style: styles.headerContainer\n    }, React.createElement(Icon, {\n      name: \"arrow-back\",\n      style: styles.headerIcon,\n      size: 24,\n      onPress: function onPress() {\n        return goToPreviousScreen();\n      }\n    }), React.createElement(Text, {\n      style: styles.headerTitle\n    }, \"Participantes\"))\n  }), React.createElement(View, null, React.createElement(Text, {\n    style: styles.noAthleteText\n  }, \"N\\xE3o existem atletas inscritos nesta prova\"))) : React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Header, {\n    statusBarProps: {\n      backgroundColor: 'transparent',\n      translucent: true\n    },\n    containerStyle: {\n      height: 80,\n      borderWidth: 0,\n      elevation: 4,\n      shadowColor: \"#000\"\n    },\n    backgroundColor: \"#1375BC\",\n    ViewComponent: LinearGradient,\n    linearGradientProps: {\n      colors: ['#1375BC', '#1794e8'],\n      start: {\n        x: 0.1,\n        y: 0.5\n      },\n      end: {\n        x: 1,\n        y: 0.5\n      }\n    },\n    leftComponent: React.createElement(View, {\n      style: styles.headerContainer\n    }, React.createElement(Icon, {\n      name: \"arrow-back\",\n      style: styles.headerIcon,\n      size: 24,\n      onPress: function onPress() {\n        return goToPreviousScreen();\n      }\n    }), React.createElement(Text, {\n      style: styles.headerTitle\n    }, \"Participantes\")),\n    rightComponent: inputChanged && React.createElement(View, {\n      style: styles.headerContainer\n    }, React.createElement(Icon, {\n      name: \"checkmark-sharp\",\n      style: styles.headerIcon,\n      size: 24,\n      onPress: function onPress() {\n        return addResult(inscritos);\n      }\n    }))\n  }), React.createElement(ScrollView, {\n    style: styles.listContainer\n  }, Object.entries(inscritos).map(function (_ref6, index) {\n    var _ref7 = _slicedToArray(_ref6, 2),\n        key = _ref7[0],\n        value = _ref7[1];\n\n    return React.createElement(View, {\n      key: key,\n      style: styles.cardsContainer\n    }, React.createElement(View, {\n      style: styles.listRowsContainer\n    }, React.createElement(Text, {\n      style: styles.listInfoParticipantTablePositionText\n    }, index + 1, \"\\xBA\"), React.createElement(Text, {\n      style: styles.listInfoNameText\n    }, value[1].nome), React.createElement(Text, {\n      style: styles.listInfoClubText\n    }, value[1].clube), React.createElement(Text, {\n      style: styles.listInfoAgeGroupText\n    }, value[1].escalao.substring(0, 3)), maskInputCreator(key)));\n  })));\n};\n\nexport default AthleticsTestScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    alignItems: 'baseline'\n  },\n  headerIcon: {\n    marginStart: 16,\n    color: 'white'\n  },\n  headerTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    flexDirection: 'row',\n    alignSelf: 'baseline',\n    width: 130,\n    marginLeft: 16,\n    color: 'white'\n  },\n  noAthleteText: {\n    fontSize: 20,\n    textAlign: 'center'\n  },\n  listContainer: {\n    width: '100%'\n  },\n  cardsContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 64,\n    padding: 0,\n    marginVertical: 8,\n    borderRadius: 16\n  },\n  listRowsContainer: {\n    height: 64,\n    paddingLeft: 8,\n    backgroundColor: '#ff7700',\n    width: '100%',\n    borderRadius: 16,\n    position: 'relative',\n    elevation: 4,\n    shadowColor: \"#000\"\n  },\n  infoTextContainer: {\n    flex: 1\n  },\n  listInfoParticipantTablePositionText: {\n    fontSize: 16,\n    color: 'white',\n    position: 'absolute',\n    top: 22,\n    left: 16\n  },\n  listInfoNameText: {\n    fontSize: 16,\n    color: 'white',\n    position: 'absolute',\n    top: 22,\n    left: 48\n  },\n  listInfoClubText: {\n    fontSize: 16,\n    color: 'white',\n    position: 'absolute',\n    top: 22,\n    left: 172\n  },\n  listInfoAgeGroupText: {\n    fontSize: 16,\n    color: 'white',\n    position: 'absolute',\n    top: 22,\n    left: 250\n  },\n  listInfoResultText: {\n    fontSize: 16,\n    color: 'white',\n    position: 'absolute',\n    top: 22,\n    left: 320\n  },\n  listGenderIconContainer: {\n    position: 'absolute',\n    top: 22,\n    left: 270\n  },\n  textInput: {\n    borderBottomWidth: 3,\n    borderColor: 'rgba(255, 255, 255, 0.5)',\n    backgroundColor: 'rgba(255, 143, 45, 0.8)',\n    fontSize: 16,\n    color: 'white',\n    position: 'absolute',\n    top: 12,\n    left: 300,\n    width: 80,\n    height: 40,\n    paddingStart: 8,\n    borderTopLeftRadius: 8,\n    borderTopRightRadius: 8\n  }\n});","map":{"version":3,"sources":["C:/Users/Pedro/Documents/GitHub/FPA-Proj3/fpaApp/screens/AthleticsTestScreen.js"],"names":["React","useState","useEffect","useNavigation","MaskInput","createNumberMask","Header","ListItem","getDatabase","ref","onValue","get","update","getAuth","LinearGradient","Icon","useSportModalities","AthleticsTestScreen","route","idMatch","params","idProva","navigation","db","auth","participantsRef","athletesRef","matchRef","userRef","currentUser","uid","results","setResults","match","setMatch","user","setUser","inscritos","setAtletas","sportModalityId","modalidade","sportModality","inputChanged","setInputChanged","handlerMatch","snapshot","matchObj","val","closeFetchMatch","then","sortFunction","a","b","unidade","resultado","handler","atletasSnapshot","atletas","forEach","childSnapshot","childKey","key","childData","genero","newResultados","enrolledResultsArray","enrolledResults","idParticipant","idAthlete","atleta","result","Object","entries","i","length","sort","closeParticipantsOnvalue","goToPreviousScreen","Alert","alert","text","onPress","goBack","addResult","updates","resultsArray","enrolledResult","push","every","undefined","setResultOnIndex","valResultado","index","newResult","maskInputCreator","sportModalityMaskInput","estado","styles","textInput","autorizado","container","backgroundColor","translucent","height","borderWidth","elevation","shadowColor","colors","start","x","y","end","headerContainer","headerIcon","headerTitle","noAthleteText","listContainer","map","value","cardsContainer","listRowsContainer","listInfoParticipantTablePositionText","listInfoNameText","nome","listInfoClubText","clube","listInfoAgeGroupText","escalao","substring","StyleSheet","create","flex","alignItems","flexDirection","marginStart","color","fontSize","fontWeight","alignSelf","width","marginLeft","textAlign","justifyContent","padding","marginVertical","borderRadius","paddingLeft","position","infoTextContainer","top","left","listInfoResultText","listGenderIconContainer","borderBottomWidth","borderColor","paddingStart","borderTopLeftRadius","borderTopRightRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StyleSheet, Text, View, ScrollView, TouchableOpacity, TextInput, Alert } from 'react-native'\r\nimport MaskInput, { createNumberMask } from 'react-native-mask-input';\r\nimport { Header, ListItem } from 'react-native-elements'\r\nimport { getDatabase, ref, onValue, get, update } from \"firebase/database\";\r\nimport { getAuth } from 'firebase/auth';\r\n\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport Icon from 'react-native-vector-icons/Ionicons';\r\nimport useSportModalities from './useSportModalities';\r\n\r\nconst AthleticsTestScreen = ({ route }) => {\r\n\r\n    // Variável com o valor do idProva da prova em que se clicou no ecrã anterior\r\n    const idMatch = route.params.idProva\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const db = getDatabase()\r\n    const auth = getAuth()\r\n    const participantsRef = ref(db, '/provas/' + idMatch + '/participantes/')\r\n    const athletesRef = ref(db, '/atletas')\r\n    const matchRef = ref(db, `/provas/${idMatch}`) // referência à base de dados para ir buscar a prova que clicamos\r\n    const userRef = ref(db, `/users/${auth.currentUser.uid}`)\r\n\r\n\r\n    const [results, setResults] = useState({})\r\n\r\n    const [match, setMatch] = useState(null)\r\n    const [user, setUser] = useState(null)\r\n    const [inscritos, setAtletas] = useState({})\r\n\r\n    const [sportModality] = useSportModalities({ sportModalityId: match?.modalidade })\r\n\r\n    const [inputChanged, setInputChanged] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        const handlerMatch = (snapshot) => {\r\n            const matchObj = snapshot.val()\r\n            setMatch(matchObj)\r\n\r\n            // let userObj = await get(userRef)\r\n\r\n            // setUser(userObj)\r\n\r\n        }\r\n\r\n        const closeFetchMatch = onValue(matchRef, handlerMatch)\r\n\r\n        get(userRef).then((snapshot) => {\r\n            setUser(snapshot.val())\r\n        })\r\n\r\n        return (() => {\r\n            closeFetchMatch()\r\n        })\r\n\r\n    }, [])\r\n\r\n    const sortFunction = ([, a], [, b]) => {\r\n        if (sportModality?.unidade === \"segundos\") {\r\n            if (a.resultado === \"\" || a.resultado === null) return 1;\r\n            if (b.resultado === \"\" || b.resultado === null) return -1;\r\n            if (a.resultado === b.resultado) return 0;\r\n            return a.resultado < b.resultado ? -1 : 1;\r\n        } else if (sportModality?.unidade === \"metros\") {\r\n            if (a.resultado === \"\" || a.resultado === null) return 1;\r\n            if (b.resultado === \"\" || b.resultado === null) return -1;\r\n            if (a.resultado === b.resultado) return 0;\r\n            return a.resultado > b.resultado ? -1 : 1;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        const handler = async (snapshot) => {\r\n\r\n            let atletasSnapshot = await get(athletesRef)\r\n\r\n            let atletas = {}\r\n\r\n            atletasSnapshot.forEach((childSnapshot) => {\r\n                const childKey = childSnapshot.key;\r\n                const childData = childSnapshot.val();\r\n                if (childData.genero === match.genero) {\r\n                    atletas[childKey] = childData\r\n                }\r\n            });\r\n\r\n            let inscritos = {}\r\n            let newResultados = {}\r\n\r\n            // NOVA VERSÃO!!!!!\r\n            let enrolledResultsArray = []\r\n            let enrolledResults = {}\r\n\r\n            snapshot.forEach((childSnapshot) => {\r\n                const idParticipant = childSnapshot.key\r\n                const idAthlete = childSnapshot.val().atleta;\r\n                const result = childSnapshot.val().resultado\r\n\r\n                newResultados[idParticipant] = result || ''\r\n                inscritos[idParticipant] = atletas[idAthlete]\r\n\r\n                // NOVA VERSÃO!!!!!\r\n                atletas[idAthlete].resultado = result || ''\r\n                enrolledResults[idParticipant] = atletas[idAthlete]\r\n\r\n                enrolledResultsArray = Object.entries(enrolledResults)\r\n\r\n                for (let i = 0; i < enrolledResultsArray.length; i++) {\r\n                    // enrolledResultsArray.sort(([,a], [,b]) => a.resultado>b.resultado)\r\n                    enrolledResultsArray.sort(sortFunction)\r\n                }\r\n            });\r\n\r\n            // setAtletas(inscritos)\r\n            setResults(newResultados)\r\n\r\n            // NOVA VERSÃO!!!!!\r\n            setAtletas(enrolledResultsArray)\r\n\r\n        }\r\n\r\n        const closeParticipantsOnvalue = match && onValue(participantsRef, handler)\r\n\r\n        return (() => {\r\n            match && closeParticipantsOnvalue()\r\n        })\r\n\r\n    }, [match, sportModality])\r\n\r\n    const goToPreviousScreen = () => {\r\n        if (inputChanged) {\r\n            Alert.alert(\r\n                \"Tens a certeza?\",\r\n                \"Vais perder as alterações que fizeste.\",\r\n                [\r\n                    {\r\n                        text: 'Sim',\r\n                        onPress: () => {\r\n                            navigation.goBack()\r\n                        },\r\n                    },\r\n                    {\r\n                        text: 'Não',\r\n                    },\r\n                ]\r\n            )\r\n        } else {\r\n            navigation.goBack()\r\n        }\r\n    }\r\n\r\n    const addResult = (enrolledResults) => {\r\n\r\n        const updates = {}\r\n        let resultsArray = []\r\n\r\n        const enrolledResultsArray = Object.entries(enrolledResults)\r\n\r\n        enrolledResultsArray.forEach((enrolledResult) => {\r\n\r\n            const idParticipant = enrolledResult[1][0]\r\n            const result = enrolledResult[1][1].resultado\r\n\r\n            updates[`/provas/${idMatch}/participantes/${idParticipant}/resultado/`] = result\r\n\r\n            resultsArray.push(result)\r\n        })\r\n\r\n        if (resultsArray.every(result => result !== null && result !== undefined && result !== \"\")) {\r\n            updates[`/provas/${idMatch}/estado/`] = \"finalizada\"\r\n        }\r\n\r\n\r\n        update(ref(db), updates)\r\n\r\n        setInputChanged(false)\r\n\r\n        Alert.alert('Resultados adicionados com sucesso.')\r\n    }\r\n\r\n    const setResultOnIndex = (valResultado, index) => {\r\n        // let newResult = Object.assign({}, results)\r\n\r\n        setInputChanged(true)\r\n        let newResult = Object.assign({}, inscritos)\r\n        // console.log(valResultado, index, results, inscritos)\r\n        // newResult[index] = valResultado;\r\n        newResult[index][1].resultado = valResultado\r\n\r\n        setAtletas(newResult)\r\n    }\r\n\r\n    const maskInputCreator = (key) => {\r\n        let sportModalityMaskInput;\r\n\r\n        if (match.estado === \"ativa\") {\r\n            if (sportModality.unidade === \"segundos\") {\r\n                sportModalityMaskInput = <MaskInput\r\n                    style={styles.textInput}\r\n                    value={inscritos[key][1].resultado || ''}\r\n                    editable={user.autorizado ? true : false}\r\n                    selectTextOnFocus={user.autorizado ? true : false}\r\n                    onChangeText={text => setResultOnIndex(text, key)}\r\n                    mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, 's']}\r\n                    placeholder='00:00s' />\r\n\r\n            } else if (sportModality.unidade === 'metros') {\r\n                sportModalityMaskInput = <MaskInput\r\n                    style={styles.textInput}\r\n                    value={inscritos[key][1].resultado || ''}\r\n                    editable={user.autorizado ? true : false}\r\n                    selectTextOnFocus={user.autorizado ? true : false}\r\n                    onChangeText={text => setResultOnIndex(text, key)}\r\n                    mask={[/\\d/, /\\d/, '.', /\\d/, /\\d/, 'm']}\r\n                    placeholder='00.00m' />\r\n\r\n            }\r\n        } else if (match.estado === \"finalizada\") {\r\n            if (sportModality.unidade === \"segundos\") {\r\n                sportModalityMaskInput = <MaskInput\r\n                    style={styles.textInput}\r\n                    value={inscritos[key][1].resultado || ''}\r\n                    editable={false}\r\n                    selectTextOnFocus={false}\r\n                    placeholder='00:00s' />\r\n\r\n            } else if (sportModality.unidade === 'metros') {\r\n                sportModalityMaskInput = <MaskInput\r\n                    style={styles.textInput}\r\n                    value={inscritos[key][1].resultado || ''}\r\n                    editable={false}\r\n                    selectTextOnFocus={false}\r\n                    placeholder='00.00m' />\r\n\r\n            }\r\n        } else if (match.estado === \"emInscricoes\") {\r\n            if (sportModality.unidade === \"segundos\") {\r\n                sportModalityMaskInput = <TextInput\r\n                    style={styles.textInput}\r\n                    editable={false}\r\n                    selectTextOnFocus={false}\r\n                    placeholder='00:00s' />\r\n\r\n            } else if (sportModality.unidade === 'metros') {\r\n                sportModalityMaskInput = <TextInput\r\n                    style={styles.textInput}\r\n                    editable={false}\r\n                    selectTextOnFocus={false}\r\n                    placeholder='00.00m' />\r\n            }\r\n        }\r\n\r\n        return sportModalityMaskInput\r\n    }\r\n\r\n    return (\r\n        Object.entries(inscritos).length == 0 ? (\r\n            <View style={styles.container}>\r\n                <Header\r\n                    statusBarProps={\r\n                        {\r\n                            backgroundColor: 'transparent',\r\n                            translucent: true,\r\n                        }\r\n                    }\r\n                    containerStyle={{ height: 80, borderWidth: 0, elevation: 4, shadowColor: \"#000\" }}\r\n                    backgroundColor='#1375BC'\r\n                    ViewComponent={LinearGradient} // Don't forget this!\r\n                    linearGradientProps={{\r\n                        colors: ['#1375BC', '#1794e8'],\r\n                        start: { x: 0.1, y: 0.5 },\r\n                        end: { x: 1, y: 0.5 },\r\n                    }}\r\n                    leftComponent={\r\n                        <View style={styles.headerContainer}>\r\n                            <Icon name='arrow-back' style={styles.headerIcon} size={24} onPress={() => goToPreviousScreen()} />\r\n                            <Text style={styles.headerTitle}>Participantes</Text>\r\n                        </View>\r\n                    }\r\n                />\r\n\r\n                <View>\r\n                    <Text style={styles.noAthleteText}>Não existem atletas inscritos nesta prova</Text>\r\n                </View>\r\n            </View>\r\n        ) : (\r\n            <View style={styles.container}>\r\n\r\n                <Header\r\n                    statusBarProps={\r\n                        {\r\n                            backgroundColor: 'transparent',\r\n                            translucent: true,\r\n                        }\r\n                    }\r\n                    containerStyle={{ height: 80, borderWidth: 0, elevation: 4, shadowColor: \"#000\" }}\r\n                    backgroundColor='#1375BC'\r\n                    ViewComponent={LinearGradient}\r\n                    linearGradientProps={{\r\n                        colors: ['#1375BC', '#1794e8'],\r\n                        start: { x: 0.1, y: 0.5 },\r\n                        end: { x: 1, y: 0.5 },\r\n                    }}\r\n                    leftComponent={\r\n                        <View style={styles.headerContainer}>\r\n                            {/* <Icon name='arrow-back' style={styles.headerIcon} size={24} onPress={() => { inputChanged ? console.log(\"QUER VOLTAR ATRÁS?\") : goToPreviousScreen() }} /> */}\r\n                            <Icon name='arrow-back' style={styles.headerIcon} size={24} onPress={() => goToPreviousScreen()} />\r\n                            <Text style={styles.headerTitle}>Participantes</Text>\r\n                        </View>\r\n                    }\r\n                    rightComponent={\r\n                        inputChanged &&\r\n                        <View style={styles.headerContainer}>\r\n                            <Icon name='checkmark-sharp' style={styles.headerIcon} size={24} onPress={() => addResult(inscritos)} />\r\n                        </View>\r\n                    }\r\n                />\r\n\r\n                {/* <View style={styles.labelContainer}>\r\n                    <Text style={styles.labelNome}>Nome</Text>\r\n                    <Text style={styles.labelRow}>Clube</Text>\r\n                    <Text style={styles.labelRow}>Escalão</Text>\r\n                    <Text style={styles.labelRow}>Marca</Text>\r\n                </View> */}\r\n\r\n                <ScrollView style={styles.listContainer}>\r\n\r\n                    {Object.entries(inscritos).map(([key, value], index) => {\r\n                        return (\r\n                            <View key={key} style={styles.cardsContainer}>\r\n                                <View style={styles.listRowsContainer}>\r\n\r\n\r\n                                    <Text style={styles.listInfoParticipantTablePositionText}>{index + 1}º</Text>\r\n\r\n                                    <Text style={styles.listInfoNameText}>{value[1].nome}</Text>\r\n\r\n                                    <Text style={styles.listInfoClubText}>{value[1].clube}</Text>\r\n\r\n                                    <Text style={styles.listInfoAgeGroupText}>{value[1].escalao.substring(0, 3)}</Text>\r\n\r\n                                    {maskInputCreator(key)}\r\n\r\n                                    {/* <Text style={styles.listInfoResultText}>{props.result}</Text> */}\r\n\r\n                                    {/* <View style={styles.listGenderIconContainer}>\r\n            {props.genero}\r\n        </View> */}\r\n                                </View>\r\n                            </View>\r\n                            // <View key={index}>\r\n                            //     <TouchableOpacity onPress={() => console.log(key)}>\r\n                            //         <ListItem style={styles.listCard}>\r\n                            //             <ListItem.Content style={styles.listRowsContainer}>\r\n                            //                 <ListItem.Title style={styles.listName}>{value[1].nome}</ListItem.Title>\r\n                            //                 <ListItem.Title style={styles.listRow}>{value[1].clube}</ListItem.Title>\r\n                            //                 <ListItem.Title style={styles.listRow}>{value[1].escalao.substring(0, 3)}</ListItem.Title>\r\n                            //                 {maskInputCreator(key)}\r\n                            //             </ListItem.Content>\r\n                            //         </ListItem>\r\n                            //     </TouchableOpacity>\r\n                            // </View>\r\n                        )\r\n                    })}\r\n                    {/* <Pressable\r\n                        style={inputChanged ? styles.btnPressable : styles.btnPressableHide}\r\n                        onPress={() => addResult(inscritos)}>\r\n                        {/* onPress={() => addResult(Object.keys(results), Object.values(results))}> */}\r\n                    {/* <Text style={styles.textPressable}>Adicionar</Text> */}\r\n                    {/* </Pressable> */}\r\n                </ScrollView>\r\n            </View>\r\n        )\r\n    )\r\n}\r\n\r\nexport default AthleticsTestScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n    },\r\n    headerContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'baseline'\r\n    },\r\n    headerIcon: {\r\n        marginStart: 16,\r\n        color: 'white',\r\n    },\r\n    headerTitle: {\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n        flexDirection: 'row',\r\n        alignSelf: 'baseline',\r\n        width: 130,\r\n        marginLeft: 16,\r\n        color: 'white'\r\n    },\r\n    noAthleteText: {\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n    },\r\n    listContainer: {\r\n        width: '100%',\r\n    },\r\n    cardsContainer: {\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        width: '95%',\r\n        height: 64,\r\n        padding: 0,\r\n        marginVertical: 8,\r\n        borderRadius: 16,\r\n    },\r\n    listRowsContainer: {\r\n        height: 64,\r\n        paddingLeft: 8,\r\n        backgroundColor: '#ff7700',\r\n        width: '100%',\r\n        borderRadius: 16,\r\n        position: 'relative',\r\n        elevation: 4,\r\n        shadowColor: \"#000\",\r\n    },\r\n    infoTextContainer: {\r\n        flex: 1,\r\n    },\r\n    listInfoParticipantTablePositionText: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n        position: 'absolute',\r\n        top: 22,\r\n        left: 16,\r\n    },\r\n    listInfoNameText: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n        position: 'absolute',\r\n        top: 22,\r\n        left: 48,\r\n    },\r\n    listInfoClubText: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n        position: 'absolute',\r\n        top: 22,\r\n        left: 172,\r\n    },\r\n    listInfoAgeGroupText: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n        position: 'absolute',\r\n        top: 22,\r\n        left: 250,\r\n    },\r\n    listInfoResultText: {\r\n        fontSize: 16,\r\n        color: 'white',\r\n        position: 'absolute',\r\n        top: 22,\r\n        left: 320,\r\n    },\r\n    listGenderIconContainer: {\r\n        position: 'absolute',\r\n        top: 22,\r\n        left: 270,\r\n    },\r\n    textInput: {\r\n        borderBottomWidth: 3,\r\n        borderColor: 'rgba(255, 255, 255, 0.5)',\r\n        // borderColor: 'rgba(255, 246, 0, 0.5)',\r\n        backgroundColor: 'rgba(255, 143, 45, 0.8)',\r\n        // backgroundColor: 'rgba(255, 246, 0, 0.5)',\r\n        fontSize: 16,\r\n        color: 'white',\r\n        // opacity: 1,\r\n        position: 'absolute',\r\n        top: 12,\r\n        left: 300,\r\n        width: 80,\r\n        height: 40,\r\n        paddingStart: 8,\r\n        // borderRadius: 16,\r\n        borderTopLeftRadius: 8,\r\n        borderTopRightRadius: 8,\r\n    },\r\n    // listContainer: {\r\n    //     width: '100%',\r\n    // },\r\n    // listCard: {\r\n    //     borderWidth: 1,\r\n    //     borderColor: 'rgb(200,200,200)',\r\n    // },\r\n    // listRowsContainer: {\r\n    //     flexDirection: 'row',\r\n    // },\r\n    // listName: {\r\n    //     flex: 2,\r\n    // },\r\n    // listRow: {\r\n    //     flex: 1,\r\n    //     textAlign: 'center',\r\n    // },\r\n    // textInput: {\r\n    //     borderWidth: 0.5,\r\n    //     // borderRadius: 4,\r\n    //     borderColor: 'rgb(120, 120, 120)',\r\n    //     flex: 0.8,\r\n    //     padding: 5,\r\n    //     height: 30,\r\n    // },\r\n    // labelContainer: {\r\n    //     flexDirection: 'row',\r\n    //     justifyContent: 'flex-start',\r\n    // },\r\n    // labelNome: {\r\n    //     marginStart: 24,\r\n    //     marginEnd: 128,\r\n    // },\r\n    // labelRow: {\r\n    //     marginEnd: 32,\r\n    //     textAlign: 'center',\r\n    // },\r\n    // btnPressable: {\r\n    //     marginTop: 50,\r\n    //     alignSelf: 'center',\r\n    //     alignItems: 'center',\r\n    //     justifyContent: 'center',\r\n    //     backgroundColor: '#5A79BA',\r\n    //     height: 40,\r\n    //     width: 150,\r\n    //     borderRadius: 5,\r\n    // },\r\n    // btnPressableHide: {\r\n    //     display: 'none',\r\n    // },\r\n    // textPressable: {\r\n    //     color: 'white',\r\n    //     fontSize: 18,\r\n    //     fontWeight: 'bold'\r\n    // },\r\n})"]},"metadata":{},"sourceType":"module"}