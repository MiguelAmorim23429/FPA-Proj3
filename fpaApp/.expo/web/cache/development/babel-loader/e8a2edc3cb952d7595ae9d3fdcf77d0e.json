{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { getDatabase, ref, onValue } from \"firebase/database\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  var navigation = useNavigation();\n  var auth = getAuth();\n  var db = getDatabase();\n  var usersRef = ref(db, '/users');\n  useEffect(function () {\n    var usersArray = [];\n    var getUsers = onValue(usersRef, function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var childKey = childSnapshot.key;\n        var childData = childSnapshot.val();\n        usersArray.push([childKey, childData]);\n      });\n      setUser(usersArray);\n    }, {\n      onlyOnce: true\n    });\n    return function () {\n      getUsers();\n    };\n  }, []);\n  var username = '';\n\n  var handleLogin = function handleLogin() {\n    signInWithEmailAndPassword(auth, email, password).then(function (userCredentials) {\n      user.map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        if (userCredentials.user.email === value.email) {\n          console.log(\"E IGUALLLLL\");\n          username = value.username;\n        }\n\n        console.log(\"chave: \" + key + \" / valor: \" + value.email);\n      });\n      Alert.alert('Bem vindo ' + username);\n    }).catch(function (error) {\n      switch (error.code) {\n        case 'auth/invalid-email':\n          alert('E-mail introduzido errado ou não existe.');\n          break;\n\n        case 'auth/user-not-found':\n          alert('Uma conta com este e-mail não existe.');\n          break;\n\n        case 'auth/wrong-password':\n          alert('Palavra-passe errada.');\n          break;\n\n        case 'auth/too-many-requests':\n          alert('Falhou o inicio de sessão demasiadas vezes. Tente novamente mais tarde.');\n          break;\n      }\n\n      console.log(error.message);\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    style: styles.imageTeste,\n    source: require(\"../assets/fpa-logo.png\")\n  }), React.createElement(View, null, React.createElement(TextInput, {\n    style: styles.textInput,\n    keyboardType: \"email-address\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    placeholder: \"Email\"\n  }), React.createElement(TextInput, {\n    style: styles.textInput,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    placeholder: \"Palavra-passe\",\n    secureTextEntry: true\n  }), React.createElement(Pressable, {\n    style: styles.btnPressable,\n    onPress: handleLogin\n  }, React.createElement(Text, {\n    style: styles.textPressable\n  }, \"Entrar\"))), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  containerLoading: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  imageTeste: {\n    width: 176,\n    height: 120,\n    marginTop: 120\n  },\n  textInput: {\n    width: 300,\n    borderBottomWidth: 2,\n    borderColor: 'rgb(120, 120, 120)',\n    padding: 10,\n    marginTop: 25,\n    fontSize: 18\n  },\n  btnPressable: {\n    marginTop: 50,\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#5A79BA',\n    height: 40,\n    width: 150,\n    borderRadius: 5\n  },\n  textPressable: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  redirectContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'baseline',\n    marginTop: 10,\n    maxHeight: 20\n  },\n  linkRegister: {\n    color: 'blue',\n    fontWeight: 'bold',\n    fontSize: 14,\n    marginLeft: 8\n  },\n  perguntaConta: {\n    color: 'rgb(120,120,120)',\n    fontSize: 13\n  }\n});","map":{"version":3,"sources":["C:/Users/Pedro/Documents/GitHub/FPA-Proj3/fpaApp/screens/LoginScreen.js"],"names":["React","useState","useEffect","useNavigation","StatusBar","getAuth","signInWithEmailAndPassword","getDatabase","ref","onValue","LoginScreen","email","setEmail","password","setPassword","user","setUser","navigation","auth","db","usersRef","usersArray","getUsers","snapshot","forEach","childSnapshot","childKey","key","childData","val","push","onlyOnce","username","handleLogin","then","userCredentials","map","value","console","log","Alert","alert","catch","error","code","message","styles","container","imageTeste","require","textInput","text","btnPressable","textPressable","StyleSheet","create","flex","alignItems","containerLoading","justifyContent","width","height","marginTop","borderBottomWidth","borderColor","padding","fontSize","alignSelf","backgroundColor","borderRadius","color","fontWeight","redirectContainer","flexDirection","maxHeight","linkRegister","marginLeft","perguntaConta"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, Image, View, TextInput, Alert, Pressable } from 'react-native'\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth'\r\nimport { getDatabase, ref, onValue } from \"firebase/database\";\r\n\r\nconst LoginScreen = () => {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState([])\r\n\r\n  const navigation = useNavigation()\r\n\r\n  const auth = getAuth()\r\n  const db = getDatabase()\r\n  const usersRef = ref(db, '/users')\r\n\r\n  useEffect(() => {\r\n    let usersArray = []\r\n    const getUsers = onValue(usersRef, (snapshot) => {\r\n      snapshot.forEach((childSnapshot) => {\r\n        const childKey = childSnapshot.key;\r\n        const childData = childSnapshot.val();\r\n        usersArray.push([childKey, childData])\r\n      });\r\n      setUser(usersArray)\r\n    }, {\r\n      onlyOnce: true\r\n    });\r\n    return () => {\r\n      getUsers()\r\n    }\r\n  }, [])\r\n\r\n  let username = ''\r\n\r\n  const handleLogin = () => {\r\n    signInWithEmailAndPassword(auth, email, password)\r\n      .then(userCredentials => {\r\n\r\n        user.map(([key, value]) => {\r\n          if (userCredentials.user.email === value.email) {\r\n            console.log(\"E IGUALLLLL\")\r\n            username = value.username\r\n          }\r\n          console.log(\"chave: \" + key + \" / valor: \" + value.email)\r\n        })\r\n\r\n        Alert.alert('Bem vindo ' + username)\r\n      })\r\n      .catch(error => {\r\n        switch (error.code) {\r\n          case 'auth/invalid-email':\r\n            alert('E-mail introduzido errado ou não existe.')\r\n            break\r\n          case 'auth/user-not-found':\r\n            alert('Uma conta com este e-mail não existe.')\r\n            break\r\n          case 'auth/wrong-password':\r\n            alert('Palavra-passe errada.')\r\n            break\r\n          case 'auth/too-many-requests':\r\n            alert('Falhou o inicio de sessão demasiadas vezes. Tente novamente mais tarde.')\r\n            break\r\n        }\r\n        console.log(error.message)\r\n        // alert(error.message)\r\n      })\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <Image\r\n        style={styles.imageTeste}\r\n        source={require('../assets/fpa-logo.png')}\r\n      />\r\n      <View>\r\n        <TextInput style={styles.textInput} keyboardType='email-address' value={email} onChangeText={text => setEmail(text)} placeholder='Email'></TextInput>\r\n        <TextInput style={styles.textInput} value={password} onChangeText={text => setPassword(text)} placeholder='Palavra-passe' secureTextEntry></TextInput>\r\n        {/* <View style={styles.redirectContainer}>\r\n            <Text style={styles.perguntaConta}>Ainda não tenho uma conta.</Text>\r\n            <Text style={styles.linkRegister} onPress={() => navigation.navigate('Register')}>Criar conta</Text>\r\n          </View> */}\r\n        <Pressable\r\n          style={styles.btnPressable}\r\n          onPress={handleLogin}>\r\n          <Text style={styles.textPressable}>Entrar</Text>\r\n        </Pressable>\r\n      </View>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n  },\r\n  containerLoading: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  imageTeste: {\r\n    width: 176,\r\n    height: 120,\r\n    marginTop: 120,\r\n  },\r\n  textInput: {\r\n    width: 300,\r\n    borderBottomWidth: 2,\r\n    borderColor: 'rgb(120, 120, 120)',\r\n    padding: 10,\r\n    marginTop: 25,\r\n    fontSize: 18,\r\n  },\r\n  btnPressable: {\r\n    marginTop: 50,\r\n    alignSelf: 'center',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#5A79BA',\r\n    height: 40,\r\n    width: 150,\r\n    borderRadius: 5,\r\n  },\r\n  textPressable: {\r\n    color: 'white',\r\n    fontSize: 18,\r\n    fontWeight: 'bold'\r\n  },\r\n  redirectContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'baseline',\r\n    marginTop: 10,\r\n    maxHeight: 20\r\n  },\r\n  linkRegister: {\r\n    color: 'blue',\r\n    fontWeight: 'bold',\r\n    fontSize: 14,\r\n    marginLeft: 8,\r\n  },\r\n  perguntaConta: {\r\n    color: 'rgb(120,120,120)',\r\n    fontSize: 13,\r\n  },\r\n})\r\n"]},"metadata":{},"sourceType":"module"}